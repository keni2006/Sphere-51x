# Generic, all-purpose Makefile for egcs/gcc 2.8.x

# *** User servicable parts

OPT =
# OPT = -O
# OPT = -O3 -fstrength-reduce -fschedule-insns2

WARN = -Wall -W

EXE := gray


# *** User servicable parts end here


CC = g++

# Spammy
#SCOTT=-Weffc++

NORTTI = -fno-rtti
NOEX = -fno-exceptions

# Debugging?
DEBUG = -g

# Profiling?
#PROF = -pg

# Use a pipe rather than temp files
PIPE = -pipe


# Source files
SRC := $(wildcard *.cpp)
SRC += $(wildcard Storage/*.cpp)
SRC += $(wildcard Storage/MySql/*.cpp)

# Exe file
# INCLUDE = -Ih -I/usr/ea/h

# MariaDB Connector/C downloaded via `scripts/fetch_mariadb_connector.bat`.
# Override `MARIADB_DIR` when targeting a custom installation.
MARIADB_DIR ?= ../third_party/mariadb-connector-c-3.3.8-linux
MARIADB_CONFIG_LOCAL := $(abspath $(MARIADB_DIR))/bin/mariadb_config
MARIADB_CONFIG_SYSTEM := $(shell command -v mariadb_config 2>/dev/null)
MYSQL_CONFIG_SYSTEM   := $(shell command -v mysql_config 2>/dev/null)

ifneq ($(wildcard $(MARIADB_CONFIG_LOCAL)),)
INCLUDE += $(shell $(MARIADB_CONFIG_LOCAL) --cflags 2>/dev/null)
LIBS    += $(shell $(MARIADB_CONFIG_LOCAL) --libs 2>/dev/null)
else ifneq ($(wildcard $(MARIADB_DIR)/include),)
INCLUDE += -I$(MARIADB_DIR)/include -I$(MARIADB_DIR)/include/mariadb -I$(MARIADB_DIR)/include/mariadb/mysql
LIBS    += -L$(MARIADB_DIR)/lib/mariadb -lmariadb
else ifneq ($(strip $(MARIADB_CONFIG_SYSTEM)),)
INCLUDE += $(shell $(MARIADB_CONFIG_SYSTEM) --cflags 2>/dev/null)
LIBS    += $(shell $(MARIADB_CONFIG_SYSTEM) --libs 2>/dev/null)
else ifneq ($(strip $(MYSQL_CONFIG_SYSTEM)),)
INCLUDE += $(shell $(MYSQL_CONFIG_SYSTEM) --cflags 2>/dev/null)
LIBS    += $(shell $(MYSQL_CONFIG_SYSTEM) --libs 2>/dev/null)
endif

# Legacy system-wide MySQL headers/libraries can still be injected manually if
# desired, for example:
#INCLUDE += -I/usr/include/mysql
#LIBS += -L/usr/lib/mysql
#LIBS += -lmysqlclient

#LIBS += -lc_p
#LIBS += -lefence

# Common flags (used both for compile and link)
SPECIAL = $(NORTTI) $(NOEX)
O_FLAGS = $(PIPE) $(PROF) $(STATIC) $(SPECIAL)

# static
#STATIC = -static

# Flags used under compiling
C_FLAGS = $(WARN) $(DEBUG) $(OPT) $(INCLUDE)

# Object files
OBJ_DIR = o
OBJ := $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(SRC))

# Include files
INCL := $(wildcard h/*.h)

.PHONY: all clean tidy ftp checkin diff distrib install

all: $(EXE)

clean:	tidy 
	rm -f $(OBJ) $(EXE)
	$(MAKE)

.depend:
	gcc -MM $(INCLUDE) $(SRC) > .depend
	perl -pi -e 's/([^.]+)\.o/o\/\1.o/g' .depend

tidy:
	rm -f *~ *orig *bak *rej

tags:	$(SRC) $(INCL)
	ctags $(SRC) $(INCL)

# Link with gcc to avoid the c++ libs to be linked
$(EXE): $(OBJ)
	gcc $(O_FLAGS) $(L_FLAGS) -o $(EXE) $(OBJ) $(LIBS)

h/version.h: VERSION
	echo "#define VERSION `head -1 VERSION`" > h/version.h
	echo "#define COMPILED_BY \"$(COMPILED_BY)\"" >> h/version.h

$(OBJ_DIR)/%.o: %.cpp
	$(CC) -c $(O_FLAGS) $(C_FLAGS) $< -o $@

# These files are under RCS control
RCS= $(SRC) $(INCL) README Changes Makefile TODO

checkin:
	-ci -mlazy -l $(RCS)

diff:
	rcsdiff -u -p $(RCS) > diff.new

include .depend
	
	
